import { router } from "@trpc/server";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [snippetText, setSnippetText] = useState("");

  const snippet = trpc.useMutation(["snippet.saveSnippet"]);
  const router = useRouter();

  const handleSave = async () => {
    if (snippetText.length) {
      const newSnippet = await snippet.mutateAsync({
        text: snippetText,
      });
      router.push(`/snippets/${newSnippet.id}`);
    }
  };

  return (
    <>
      <Head>
        <title>Pastebin Clone</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="container mx-auto flex justify-center flex-col max-w-md text-center">
          <h1 className="text-4xl mb-4 mt-6">Pastebin Clone</h1>
          <p className="text-center">Paste a snippet to save for later</p>
          <textarea
            className=" p-2 h-48 mt-4 mb-6 w-full text-white outline-2 outline-indigo-700 border-0 bg-zinc-700"
            onChange={(e) => setSnippetText(e.target.value)}
            value={snippetText}
          ></textarea>
          <button
            onClick={handleSave}
            className="bg-indigo-700 p-2 text-white hover:bg-indigo-800 rounded-sm disabled:opacity-30 "
            disabled={!snippetText.length}
          >
            Save Snippet
          </button>
        </div>
      </main>
    </>
  );
};

export default Home;
